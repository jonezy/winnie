#!/usr/bin/env node

var colors = require('colors');
    fs = require('fs'),
    moment = require('moment'),
    os = require('os'),
    pkg = require('../package.json'),
    version = pkg.version,
    path = require('path'),
    program = require('commander');

program
  .version(version);

program
  .command('new')
  .description('generates a new template specified by the <TYPE> argument')
  .action(function(cmd) {
      var contentEngine = cmd;
      var action = program.args[1];

      if(contentEngine === 'jekyll') {
        var postsPath = path.join(__dirname, '/_posts');
        fs.lstat(postsPath, function(err, stats) {
          if(err) {
            postsPath = path.join(__dirname, '../','/_posts')
            fs.lstat(postsPath, function(err, stats) {
              if(err) {
                console.log();
                console.log('   There is no _posts directory, are you sure this is a jekyll aware site?'.red); console.log();
              } else {
                if(action === 'post') {
                  var d = moment().format('YYYY-MM-DD h:mm a');
                  var finished = jekyll_post_template.replace('<dt>', d);
                  var fileName = moment().format('YYYY-MM-DD') + '-post-title-here.markdown';

                  fs.writeFile(path.join(postsPath, fileName), finished, function(err) {
                    if(err) {
                      console.log();
                      console.log('   There was a problem writing the post template to ' + '/posts' + fileName.red);
                    } else {
                      var message ='   Wrote ' + fileName + ' to ' + postsPath; 
                      console.log();
                      console.log(message.green);
                    }
                  });
                }
              }
            });
          }
        });
      }
  });

program.parse(process.argv);

var eol = os.EOL;

var jekyll_post_template = [
  '---',
  'layout: post',
  'title:  "SET YOUR TITLE HERE"',
  'date:  <dt>',
  'categories: ADD YOUR CATEGORIES SEPERATED BY COMMAS',
  'published: false',
  '---'
].join(eol);
